//    Variables Used
//
//////////////////////////
//
//    vDamage - All Types of Damage
//    vDelay - Reload Time
//    vDeviation
//    vPowCost - Power Costs
//    vRange - Weapons Range ONLY! Not used for AoE Effect Range
//    vEffectiveRange - Effective Range
//    vMinDmg - Lowest Damage
//    vWasteHeat - Heat Needed
//    vAoE_Range - Range AoE Weapons Effect
//    vRequiredCharge - Charge needed for Charge to Fire
//    vSpeed - Weapon Speed
//     vMinHit - Minimum Hit Chance
//     vAccuracy - Hit Chance
//
//////////////////////////

System: PlanetCannon
	Name: #SS_PLANETCANNON_NAME
	Description: #SS_PLANETCANNON_DESC
	Appearance: DefenseBuilding

	Available: Techs.Kinetic_Root.Level > 0
	Level: Techs.Kinetic_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level As Level
	HPLevel:  Techs.Materials_Struct.Level As Level
	DamageLevel: Techs.Kinetic_Root.Level
	RangeLevel: Techs.Kinetic_Targetting.Level As Level
	AmmoLevel: Techs.Kinetic_Ammo.Level As Level
	HardenedLevel: Techs.Kinetic_Hardened.Level As Level
	
	Size: Scale
	Durability: 800 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * PLANET_STRUCT_MULT
	Mass: (800 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Structure, Weapon
	Tied To: Kinetic_Root 0
	
	Costs: Metals[200 * Size * pow(COST_INC_CRV, Level)], Electronics[25 * Size * pow(COST_INC_CRV, Level)], AdvParts[25 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 1 * STRUCT_COMPLX_MULT
	
	vDamage: 200 * Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
	vDelay: (10 + (sqrt(Size) / 5)) / (1 + (0.05 * AmmoLevel))
	vDeviation: 0.1
	vRange: (40 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vProjSpeed: (vRange / 5)  * (1 + (DamageLevel * GA_TECH_INCREASE))
	vEffectiveRange: 0.4 +  (0.02 * RangeLevel)
	vMinHit: 0.5
	vWorkers: Size*300000

	Provides: ProjWeapon with Damage[vDamage],
				Delay[vDelay], AmmoUse[0], Range[vRange], Speed[vProjSpeed],
				Deviation[vDeviation], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
	
	Requires:
		To Run:
			Workers[vWorkers]

	Hints: Workers[vWorkers * -1], DPS[vDamage / vDelay], Range[vRange], HP[Durability]

	
System: Railgun
    Name: #SS_RAILGUN_NAME
    Description: #SS_RAILGUN_DESC
    Appearance: RailGun
	Explosion: subsystem_destroyed

	Available: Techs.Kinetic_Root.Level > 0
	Level: Techs.Kinetic_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level As Level
	DamageLevel: Techs.Kinetic_Root.Level
	RangeLevel: Techs.Kinetic_Targetting.Level As Level
	AmmoLevel: Techs.Kinetic_Ammo.Level As Level
	HardenedLevel: Techs.Kinetic_Hardened.Level As Level
	HPLevel: Techs.Materials_Weapons.Level As Level
	
    Size: Scale
    Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
    Mass: (80 * Size) / (1 + (0.1 * MassLevel))
    
    Tags: Weapon, ProjWeapon, Railgun
	Tied To: Kinetic_Root 0
    
    Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[Size * 25]
    Complexity: 1
    
    vDamage: 50 * Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
    vDelay: (2.5 + (sqrt(Size) / 5)) / (1 + (0.05 * AmmoLevel))
    vDeviation: 0.1
    vRange: (200 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
    vSpeed: (vRange / 5)  * (1 + (DamageLevel * GA_TECH_INCREASE))
    vEffectiveRange: 0.4 +  (0.02 * RangeLevel)
    vMinHit: 0.33
    vAmmoUse: 1 * Size

    Provides: ProjWeapon with Damage[vDamage], Delay[vDelay], AmmoUse[vAmmoUse],
        Range[vRange], Speed[vSpeed], Deviation[vDeviation], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
    
    Provides: AmmoStorage with Amount[Size * 25]

    Requires:
        To Run:
            Control[10 * Size]

    Hints: Alpha[vDamage], Ammo[Size * 25], AmmoUse[-1 * vAmmoUse / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/AmmoperShot[-1 * vAmmoUse], Local/ProjSpeed[vSpeed], Local/Delay[vDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit]

System: TwinRailgun
    Name: #SS_TWINRAILGUN_NAME
    Description: #SS_TWINRAILGUN_DESC
    Appearance: TwinRailgun
	Explosion: subsystem_destroyed

	Available: Techs.Kinetic_Root.Level > 0
	Level: Techs.Kinetic_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level As Level
	DamageLevel: Techs.Kinetic_Root.Level
	RangeLevel: Techs.Kinetic_Targetting.Level As Level
	AmmoLevel: Techs.Kinetic_Ammo.Level As Level
	HardenedLevel: Techs.Kinetic_Hardened.Level As Level
	HPLevel: Techs.Materials_Weapons.Level As Level
	
    Size: Scale
    Durability: 80 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
    Mass: (160 * Size) / (1 + (0.1 * MassLevel))
    
    Tags: Weapon, ProjWeapon, Railgun, ClipWeapon
	Tied To: Kinetic_Root 0
    
    Costs: Metals[400 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[50 * Size * pow(SUBS_COST_CRV, Level)], Labr[10 * Size], Ammo[Size * 25]
    Complexity: 2
    
    vBurst: 2
    vDelay: (2.5 + (sqrt(Size) / 5)) / (1 + (0.05 * AmmoLevel))
    vDamage: 50 * Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
    vShotDelay: 0.2
    vTotalDelay: (vShotDelay * (vBurst - 1)) + vDelay
    vRange: (200 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
    vSpeed: (vRange / 5)  * (1 + (DamageLevel * GA_TECH_INCREASE))
    vEffectiveRange: 0.4 +  (0.02 * RangeLevel)
    vMinHit: 0.33
    vAmmoUse: 1 * Size

    Provides: TwinProjWeapon with Damage[vDamage], ShotDelay[vShotDelay],
        Delay[vDelay], ClipSize[vBurst], AmmoUse[vAmmoUse], Range[vRange], Speed[vSpeed], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
    
    Provides: AmmoStorage with Amount[Size * 25]

    Requires:
        To Run:
            Control[15 * Size]

    Hints: 	Alpha[vDamage * vBurst], Ammo[Size * 25],AmmoUse[(-1 * vAmmoUse * vBurst) / vTotalDelay],DPS[(vDamage * vBurst) / vTotalDelay], Local/Range[vRange], Local/DMGperShot[vDamage],Local/AmmoperShot[-1 * vAmmoUse],Local/ProjSpeed[vSpeed],Local/Delay[vTotalDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit],Local/ClipDelay[vDelay],Local/Clip[vBurst] 			


System: MuonCannon
    Name: #SS_MUONCANNON_NAME
    Description: #SS_MUONCANNON_DESC
    Appearance: MuonCannon
	Explosion: subsystem_destroyed

	Available: Techs.Kinetic_Root.Level > 0
	Level: Techs.Kinetic_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level As Level
	DamageLevel: Techs.Kinetic_Root.Level
	RangeLevel: Techs.Kinetic_Targetting.Level As Level
	AmmoLevel: Techs.Kinetic_Ammo.Level As Level
	HardenedLevel: Techs.Kinetic_Hardened.Level As Level
	HPLevel: Techs.Materials_Weapons.Level As Level
	
    Size: Scale
    Durability: 100 * Size * pow(HEALTH_CURVE,HPLevel) * HEALTH_MULT
    Mass: (80 * Size) / (1 + (0.1 * MassLevel))
    
    Tags: Weapon, ProjWeapon
	Tied To: Kinetic_Root 0
    
    Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[Size * 10]
    Complexity: 1
    
    vDamage: 30 * Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
    vDelay: (4 + (sqrt(Size) / 5)) / (1 + (0.05 * AmmoLevel))
    vDeviation: 0.15
    vRange: (200 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
    vSpeed: (vRange / 5)  * (1 + (DamageLevel * GA_TECH_INCREASE))
    vAmmoUse: 1 * Size
    vEffectiveRange: 0.4 +  (0.02 * RangeLevel)
    vMinHit: 0.33

    Provides: MuonWeapon with Damage[vDamage], Delay[vDelay], AmmoUse[vAmmoUse],
        Range[vRange], Speed[vSpeed], Deviation[vDeviation], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
    
    Provides: AmmoStorage with Amount[Size * 10]
    
    Consumes:
        To Run:
            Power[10 * Size]

    Requires:
        To Run:
            Control[10 * Size]

    Hints: Alpha[vDamage], Ammo[Size * 10], AmmoUse[-1 * vAmmoUse / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/AmmoperShot[-1 * vAmmoUse], Local/ProjSpeed[vSpeed], Local/Delay[vDelay]    

	

System: GraviticAccelerator
    Name: #SS_GRAVACCELERATOR_NAME
    Description: #SS_GRAVACCELERATOR_DESC
    Appearance: GraviticAccelerator
	Explosion: subsystem_destroyed

	Available: Techs.Kinetic_Root.Level > 0
	Level: Techs.Kinetic_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level As Level
	DamageLevel: Techs.Kinetic_Root.Level
	RangeLevel: Techs.Kinetic_Targetting.Level As Level
	AmmoLevel: Techs.Kinetic_Ammo.Level As Level
	HardenedLevel: Techs.Kinetic_Hardened.Level As Level
	HPLevel:  Techs.Materials_Weapons.Level As Level
	
    Size: Scale
    Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
    Mass: (200 * Size) / (1 + (0.1 * MassLevel))
    
    Tags: Weapon, ProjWeapon
	Tied To: Kinetic_Root 0
    
    Costs: Metals[300 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[40 * Size * pow(SUBS_COST_CRV, Level)], Labr[8 * Size], Ammo[Size * 10]
    Complexity: 2.5
    
    vDamage: 125 * Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
    vDelay: (7 + (sqrt(Size) / 5)) / (1 + (0.05 * AmmoLevel))
    vDeviation: 0.1
    vRange: (250 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
    vEffectiveRange: 1
    vMinHit: 1
    vAmmoUse: 0.25 * Size

    Provides: RelativisticWeapon with Damage[vDamage], Delay[vDelay], AmmoUse[vAmmoUse],
        Range[vRange], Deviation[vDeviation], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
    
    Provides: AmmoStorage with Amount[Size * 10]

    Requires:
        To Run:
            Control[20 * Size]
    
    Consumes:
        To Run:
            Power[Size * 40]

    Hints: Alpha[vDamage], Ammo[Size * 10], AmmoUse[-1 * vAmmoUse / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/AmmoperShot[-1 * vAmmoUse], Local/Delay[vDelay]
    

System: AutocannonBattery
    Name: #SS_AUTOCANBATT_NAME
    Description: #SS_AUTOCANBATT_DESC
    Appearance: AutoCannon
	Explosion: subsystem_destroyed
	
	Available: Techs.Kinetic_Root.Level > 0
	Level: Techs.Kinetic_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level As Level
	DamageLevel: Techs.Kinetic_Root.Level
	RangeLevel: Techs.Kinetic_Targetting.Level As Level
	AmmoLevel: Techs.Kinetic_Ammo.Level As Level
	HardenedLevel: Techs.Kinetic_Hardened.Level As Level
	HPLevel: Techs.Materials_Weapons.Level As Level
	
    Size: Scale
    Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
    Mass: (80 * Size) / (1 + (0.1 * MassLevel))
    
    Tags: Weapon, ProjWeapon
	Tied To: Kinetic_Root 0
    
    Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[Size * 25]
    Complexity: 1.25
    
    vBurst: 4
    vDelay: (2 + (sqrt(Size) / 5)) / (1 + (0.05 * AmmoLevel))
    vDamage: 15 * Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
    vShotDelay: 0.1
    vTotalDelay: (vShotDelay * vBurst) + vDelay
    vRange: (160 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
    vSpeed: (vRange / 5)  * (1 + (DamageLevel * GA_TECH_INCREASE))
    vEffectiveRange: 0.4 +  (0.02 * RangeLevel)
    vMinHit: 0.33
    vAmmoUse: 0.5 * Size

    Provides: ProjWeapon2 with Damage[vDamage], ShotDelay[vShotDelay],
        Delay[vDelay], ClipSize[vBurst], AmmoUse[vAmmoUse], Range[vRange], Speed[vSpeed], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
    
    Provides: AmmoStorage with Amount[Size * 25]

    Requires:
        To Run:
            Control[10 * Size]

    Hints: Alpha[vDamage * vBurst], Ammo[Size * 25], AmmoUse[(-1 * vAmmoUse * vBurst) / vTotalDelay], DPS[(vDamage * vBurst) / vTotalDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/AmmoperShot[-1 * vAmmoUse], Local/ProjSpeed[vSpeed], Local/Delay[vDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit]


System: GatlingTurret
    Name: #SS_GATLINGTURRET_NAME
    Description: #SS_GATLINGTURRET_DESC
    Appearance: GatlingTurret
	Explosion: subsystem_destroyed

	Available: Techs.Kinetic_Root.Level > 0
	Level: Techs.Kinetic_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level As Level
	DamageLevel: Techs.Kinetic_Root.Level
	RangeLevel: Techs.Kinetic_Targetting.Level As Level
	AmmoLevel: Techs.Kinetic_Ammo.Level As Level
	HardenedLevel: Techs.Kinetic_Hardened.Level As Level
	HPLevel: Techs.Materials_Weapons.Level As Level
	
    Size: Scale
    Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
    Mass: (80 * Size) / (1 + (0.1 * MassLevel))
    
    Tags: Weapon, ProjWeapon, PDWeap, Extendable, ClipWeapon
	Tied To: Kinetic_Root 0
    
    Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Ammo[Size * 25]
    Complexity: 1.25
    
    vClip: 60				//was 120
    vDelay: (3 + (sqrt(Size) / 5)) / (1 + (0.05 * AmmoLevel))
    vDamage: 2.5 * Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
    vShotDelay: 0.1
    vTotalDelay: (vShotDelay * vClip) + vDelay
    vRange: (120 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
    vSpeed: (vRange / 5)  * (1 + (DamageLevel * GA_TECH_INCREASE))
    vEffectiveRange: 0.4 +  (0.02 * RangeLevel)
    vMinHit: 0.33
    vAmmoUse: 0.1 * Size
    
    vEffectivity: (Scale / Object.Scale) / 20
    
    Provides: PointDefense with Effectivity[vEffectivity]
    
    Provides: GatlingGun with 
        Damage[vDamage], ShotDelay[vShotDelay],
        Delay[vDelay], ClipSize[vClip], AmmoUse[vAmmoUse], Range[vRange], Speed[vSpeed], effectiveRangeFactor[vEffectiveRange], minHitChance[vMinHit]
    
    
    Provides: AmmoStorage with Amount[Size * 25]

    Requires:
        To Run:
            Control[10 * Size]

    Hints: 	Alpha[vDamage * vClip], Ammo[Size * 25], AmmoUse[(-1 * vAmmoUse) / vShotDelay], DPS[(vDamage * vClip)/ vTotalDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/AmmoperShot[-1 * vAmmoUse],  Local/ProjSpeed[vSpeed], Local/Delay[vTotalDelay], Local/ClipDelay[vDelay], Local/Clip[vClip], PointDefense[vEffectivity], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit]
	
