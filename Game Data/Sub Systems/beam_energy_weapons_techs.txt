
//	Variables Used
//
//////////////////////////
//
//	vDamage - All Types of Damage
//	vDelay - Reload Time
//	vDeviation
//	vPowCost - Power Costs
//	vRange - Weapons Range ONLY! Not used for AoE Effect Range
//	vEffectiveRange - Effective Range
//	vMinDmg - Lowest Damage
//	vWasteHeat - Heat Needed
//	vAoE_Range - Range AoE Weapons Effect
//	vRequiredCharge - Charge needed for Charge to Fire
//	vSpeed - Weapon Speed
// 	vMinHit - Minimum Hit Chance
// 	vAccuracy - Hit Chance
//
//////////////////////////

System: PlanetLaser
	Name: #SS_PLANETLASER_NAME
	Description: #SS_PLANETLASER_DESC
	Appearance: DefenseBuilding

	Available: Techs.BeamEnergy_Root.Level > 0
	Level: Techs.BeamEnergy_Root.Level
	
	MassLevel: Techs.Materials_Lightweight.Level As Level
	HPLevel: Techs.Materials_Struct.Level As Level
	DamageLevel: Techs.BeamEnergy_Root.Level As Level
	RangeLevel: Techs.BeamEnergy_Focus.Level As Level
	WaveLevel: Techs.BeamEnergy_Wavelength.Level As Level
	
	Size: Scale
	Durability: 800 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * PLANET_STRUCT_MULT
	Mass: (800 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Structure, Weapon
	Tied To: BeamEnergy_Root 0
	
	Costs: Metals[180 * Size * pow(COST_INC_CRV, Level)], Electronics[50 * Size * pow(COST_INC_CRV, Level)], AdvParts[50 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 1.5 * STRUCT_COMPLX_MULT
	
	vDamage: 100 * Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
	vDelay:(4 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vDeviation: 0.1
	vDuration: 3
	vRange: (30 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vWorkers: Size*300000
	vEffectiveRange: 0.66
	vMinDmg: 0.5

	//50% more damage than a planet cannon, but spread over 3 seconds (suffers more damage soak)
	Provides: NarrowEnergyWeapon with Damage[vDamage], Duration[vDuration], Delay[vDelay], PowCost[0], 
		Range[vRange], Deviation[vDeviation], effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], wasteHeat[0]
	
	Requires:
		To Run:
			Workers[vWorkers]

	Hints: Workers[vWorkers * -1], DPS[vDuration * vDamage / vDelay], Range[vRange], HP[Durability]
	
System: Laser
	Name: #SS_LASER_NAME
	Description: #SS_LASER_DESC
	Appearance: LaserGun
	Explosion: subsystem_destroyed
	
	Available: Techs.BeamEnergy_Root.Level > 0
	Level: Techs.BeamEnergy_Root.Level
	
	MassLevel: Techs.Materials_Lightweight.Level As Level
	DamageLevel: Techs.BeamEnergy_Root.Level As Level
	RangeLevel: Techs.BeamEnergy_Focus.Level As Level
	PowerLevel: Techs.BeamEnergy_Efficiency.Level As Level
	WaveLevel: Techs.BeamEnergy_Wavelength.Level As Level
	HPLevel:  Techs.Materials_Weapons.Level As Level
	
	Size: Scale
	Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (80 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Weapon, BeamEnergyWeapon, Require:ThermalManagement, Laser
	Tied To: BeamEnergy_Root 0
	
	Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[25 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 1.3
	
	vDamage: 50* Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
	vDelay:(2 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vDeviation: 0.1
	vPowCost:(20 * Size) / (1 + (0.1 * PowerLevel))
	vRange: (180 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vEffectiveRange: 0.4 +  (0.02 * DamageLevel)
	vMinDmg: 0.5
	vWasteHeat: (0.5 * Size) / (1 + (0.1 * PowerLevel))
	
	//Notes: DPS decreases slightly with size, such that at size 100, DPS is halved; However, Range increases with size,
	Provides: EnergyWeapon with Damage[vDamage], Delay[vDelay], Duration[1], PowCost[vPowCost], Range[vRange], Deviation[vDeviation],
		effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[10 * Size]
	
	Hints: Alpha[vDamage], Power[-1 * vPowCost], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage / 4], Local/HitsperShot[4], Local/Duration[1], Local/Delay[vDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinDmg[vMinDmg * vDamage], WasteHeat[vWasteHeat / vDelay]


System: OverchargeLaser
	Name: #SS_OVERLASER_NAME
	Description: #SS_OVERLASER_DESC
	Appearance: OverLaser
	Explosion: subsystem_destroyed
	
	Available: Techs.BeamEnergy_Root.Level > 0
	Level: Techs.BeamEnergy_Root.Level
	
	MassLevel: Techs.Materials_Lightweight.Level As Level
	DamageLevel: Techs.BeamEnergy_Root.Level
	RangeLevel: Techs.BeamEnergy_Focus.Level As Level
	PowerLevel: Techs.BeamEnergy_Efficiency.Level As Level
	WaveLevel: Techs.BeamEnergy_Wavelength.Level As Level
	HPLevel:  Techs.Materials_Weapons.Level As Level
	
	Size: Scale
	Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (80 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Weapon, BeamEnergyWeapon, Require:ThermalManagement, Laser
	Tied To: BeamEnergy_Root 0
	
	Costs: Metals[125 * Size * pow(SUBS_COST_CRV, Level)], Electronics[225 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[225 * Size * pow(SUBS_COST_CRV, Level)], Labr[10 * Size]
	Complexity: 1.5
	
	vDamage: 50* Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
	vDelay:(2 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vDeviation: 0.1
	vPowCost:(80 * Size) / (1 + (0.1 * PowerLevel))
	vRange: (180 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vEffectiveRange: 0.4 +  (0.02 * DamageLevel)
	vMinDmg: 0.5
	vWasteHeat: (1.2 * Size) / (1 + (0.1 * PowerLevel))
	
	Provides: EnergyWeaponRed with Damage[vDamage], Delay[vDelay], Duration[1], PowCost[vPowCost], Range[vRange], Deviation[vDeviation],
		effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[20 * Size]
	
	Hints: Alpha[vDamage], Power[-1 * vPowCost], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage / 4], Local/HitsperShot[4], Local/Duration[1], Local/Delay[vDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinDmg[vMinDmg * vDamage], WasteHeat[vWasteHeat / vDelay]
	

System: GatlingLaser
	Name: #SS_GATLASER_NAME
	Description: #SS_GATLASER_DESC
	Appearance: GatlingLaser
	Explosion: subsystem_destroyed
	
	Available: Techs.BeamEnergy_Root.Level > 0
	Level: Techs.BeamEnergy_Root.Level
	
	MassLevel: Techs.Materials_Lightweight.Level As Level
	DamageLevel: Techs.BeamEnergy_Root.Level
	RangeLevel: Techs.BeamEnergy_Focus.Level As Level
	PowerLevel: Techs.BeamEnergy_Efficiency.Level As Level
	WaveLevel: Techs.BeamEnergy_Wavelength.Level As Level
	HPLevel:  Techs.Materials_Weapons.Level As Level
	
	Size: Scale
	Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (80 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Weapon, BeamEnergyWeapon, Require:ThermalManagement, Laser, PDWeap, Extendable, ClipWeapon
	Tied To: BeamEnergy_Root 0
	
	Costs: Metals[120 * Size * pow(SUBS_COST_CRV, Level)], Electronics[40 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 1.5
	
	vDamage: 4.5* Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
	vClip: 30								//was 60
	vDelay:(2 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vShotDelay: 0.2																					//was 0.25
	vTotalDelay: (vShotDelay * vClip) + vDelay
	vPowCost:(5 * Size) / (1 + (0.1 * PowerLevel))
	vRange: (180 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vEffectiveRange: 0.4 +  (0.02 * DamageLevel)
	vMinDmg: 0.66
	vWasteHeat: (0.075 * Size) / (1 + (0.1 * PowerLevel))
	
	vEffectivity: (Scale / Object.Scale) / 20
	
	Provides: PointDefense with Effectivity[vEffectivity]
	
	//Notes: DPS decreases slightly with size, such that at size 100, DPS is halved; However, Range increases with size,
	Provides: BurstEnergyWeapon with Damage[vDamage], Delay[vDelay], PowCost[vPowCost], Range[vRange], ShotDelay[vShotDelay], ClipSize[vClip],
		effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[15 * Size]
	
	Hints: 	Alpha[(vDamage * 0.5) * vClip],Power[-1 * vPowCost],DPS[((vDamage * 0.5) * vClip) / vTotalDelay],Local/Range[vRange], Local/DMGperShot[vDamage * 0.5], Local/Delay[vTotalDelay],Local/ClipDelay[vDelay],Local/Clip[vClip],PointDefense[vEffectivity], Local/EffRange[vEffectiveRange * vRange], Local/MinDmg[vMinDmg * vDamage], WasteHeat[(vWasteHeat * 0.5 * vClip)/ vTotalDelay]
	
	
System: TRayEmitter
	Name: #SS_TRAYEMITT_NAME
	Description: #SS_TRAYEMITT_DESC
	Appearance: TRayEmitter
	Explosion: subsystem_destroyed
	
	Available: Techs.BeamEnergy_Root.Level > 0
	Level: Techs.BeamEnergy_Root.Level
	
	MassLevel: Techs.Materials_Lightweight.Level As Level
	DamageLevel: Techs.BeamEnergy_Root.Level
	RangeLevel: Techs.BeamEnergy_Focus.Level As Level
	PowerLevel: Techs.BeamEnergy_Efficiency.Level As Level
	WaveLevel: Techs.BeamEnergy_Wavelength.Level As Level
	HPLevel:  Techs.Materials_Weapons.Level As Level
	
	Size: Scale
	Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (80 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Weapon, BeamEnergyWeapon, Require:ThermalManagement, Laser
	Tied To: BeamEnergy_Root 0
	
	Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[50 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[125 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 3
	
	vDamage: 20* Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
	vDelay:(1 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vDeviation: 0.1
	vPowCost:(100 * Size) / (1 + (0.1 * PowerLevel))
	vRange: (120 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vEffectiveRange: 0.4 +  (0.02 * DamageLevel)
	vMinDmg: 0.5
	vWasteHeat: (0.25 * Size) / (1 + (0.1 * PowerLevel))
	
	Provides: TRayEnergyWeapon with Damage[vDamage], Delay[vDelay], Duration[1], PowCost[vPowCost], Range[vRange], Deviation[vDeviation],
		effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[30 * Size]
	
	Hints: Alpha[vDamage], Power[-1 * vPowCost], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage / 4], Local/HitsperShot[4], Local/Duration[1], Local/Delay[vDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinDmg[vMinDmg * vDamage], WasteHeat[vWasteHeat / vDelay]

System: PhasedLaser
	Name: #SS_PHASEDLASER_NAME
	Description: #SS_PHASEDLASER_DESC
	Appearance: PlasmaGun
	Explosion: subsystem_destroyed
	
	Available: Techs.BeamEnergy_Root.Level > 0
	Level: Techs.BeamEnergy_Root.Level
	
	MassLevel: Techs.Materials_Lightweight.Level As Level
	DamageLevel: Techs.BeamEnergy_Root.Level
	RangeLevel: Techs.BeamEnergy_Focus.Level As Level
	PowerLevel: Techs.BeamEnergy_Efficiency.Level As Level
	WaveLevel: Techs.BeamEnergy_Wavelength.Level As Level
	HPLevel:  Techs.Materials_Weapons.Level As Level
	
	Size: Scale
	Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (80 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Weapon, BeamEnergyWeapon, Require:ThermalManagement, Laser
	Tied To: BeamEnergy_Root 0
	
	Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[50 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[125 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 1.8
	
	vDamage: 15* Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
	vDelay:(1 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vDeviation: 0.1
	vPowCost:(120 * Size) / (1 + (0.1 * PowerLevel))
	vRange: (120 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vEffectiveRange: 0.4 +  (0.02 * DamageLevel)
	vMinDmg: 0.5
	vWasteHeat: (0.3 * Size) / (1 + (0.1 * PowerLevel))
	
	Provides: PhasedEnergyWeapon with Damage[vDamage], Delay[vDelay], Duration[1], PowCost[vPowCost], Range[vRange], Deviation[vDeviation],
		effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[25 * Size]
	
	Hints: Alpha[vDamage], Power[-1 * vPowCost], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage / 4], Local/HitsperShot[4], Local/Duration[1], Local/Delay[vDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinDmg[vMinDmg * vDamage], WasteHeat[vWasteHeat / vDelay]

System: IonCannon
	Name: #SS_IONBEAM_NAME
	Description: #SS_IONBEAM_DESC
	Appearance: IonCannon
	Explosion: subsystem_destroyed
		
	Available: Techs.BeamEnergy_Root.Level > 0
	Level: Techs.BeamEnergy_Root.Level
	
	MassLevel: Techs.Materials_Lightweight.Level As Level
	DamageLevel: Techs.BeamEnergy_Root.Level
	RangeLevel: Techs.BeamEnergy_Focus.Level As Level
	PowerLevel: Techs.BeamEnergy_Efficiency.Level As Level
	WaveLevel: Techs.BeamEnergy_Wavelength.Level As Level
	HPLevel:  Techs.Materials_Weapons.Level As Level
	
	Size: Scale
	Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (100 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Weapon, BeamEnergyWeapon, Require:ThermalManagement
	Tied To: BeamEnergy_Root 0
	
	Costs: Metals[80 * Size * pow(SUBS_COST_CRV, Level)], Electronics[25 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[40 * Size * pow(SUBS_COST_CRV, Level)], Labr[6 * Size]
	Complexity: 2
	
	vDamage: 44* Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
	vDelay:(4 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vDeviation: 0.1
	vPowCost:(50 * Size) / (1 + (0.1 * PowerLevel))
	vRange: (150 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vDuration: 3.0
	vTotalDelay: vDelay + vDuration
	vEffectiveRange: 0.4 +  (0.02 * DamageLevel)
	vMinDmg: 0.5
	vWasteHeat: (0.48 * Size) / (1 + (0.1 * PowerLevel))
	
	Provides: WideEnergyWeapon with Damage[vDamage], Delay[vDelay], Duration[vDuration], PowCost[vPowCost], Range[vRange], Deviation[vDeviation],
		effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], wasteHeat[vWasteHeat]
	
	Requires:
		To Run:
			Control[10 * Size]
	
	Hints: Alpha[vDamage * vDuration], Power[-1 * vPowCost * vDuration], DPS[(vDamage * 3.0) / vTotalDelay], Local/Range[vRange], Local/DMGperShot[vDamage * 3.0], Local/HitsperShot[12], Local/Duration[vDuration], Local/Delay[vDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinDmg[vMinDmg * vDamage], WasteHeat[(vWasteHeat * vDuration) / vDelay]
	



System: PlasmaBeam
	Name: #SS_PLASMABEAM_NAME
	Description: #SS_PLASMABEAM_DESC
	Appearance: PlasmaGunGreen
	Explosion: subsystem_destroyed
	
	Tags: Weapon, BeamEnergyWeapon, Require:ThermalManagement
	Tied To: BeamEnergy_Root 0
	
	Available: Techs.BeamEnergy_Root.Level > 0
	Level: Techs.BeamEnergy_Root.Level
	
	MassLevel: Techs.Materials_Lightweight.Level As Level
	DamageLevel: Techs.BeamEnergy_Root.Level
	RangeLevel: Techs.BeamEnergy_Focus.Level As Level
	PowerLevel: Techs.BeamEnergy_Efficiency.Level As Level
	WaveLevel: Techs.BeamEnergy_Wavelength.Level As Level
	HPLevel:  Techs.Materials_Weapons.Level As Level
	
	Size: Scale
	Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (80 * Size) / (1 + (0.1 * MassLevel))
	
	Costs: Metals[70 * Size * pow(SUBS_COST_CRV, Level)], Electronics[40 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[50 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 1.5
	
	vDamage: 30* Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
	vDelay:(1 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vDeviation: 0.1
	vPowCost:(60 * Size) / (1 + (0.1 * PowerLevel))
	vRange: (100 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vEffectiveRange: 0.4 +  (0.02 * DamageLevel)
	vMinDmg: 0.5
	vWasteHeat: (0.42 * Size) / (1 + (0.1 * PowerLevel))
	
	//Front-loaded damage plus a DoT after-effect, at a higher power cost than lasers (works well with improved energy systems)
	Provides: PlasmaPulse with FrontDamage[vDamage], DoTDamageRate[vDamage],
		Delay[vDelay], Duration[1], PowCost[vPowCost], Range[vRange], Deviation[vDeviation],
		effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[15 * Size]
	
	Hints: Alpha[vDamage + vDamage], Power[-1 * vPowCost], DPS[(vDamage + vDamage) / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage / 4], Local/HitsperShot[4], Local/DMGburn[vDamage], Local/Delay[vDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinDmg[vMinDmg * vDamage], WasteHeat[vWasteHeat / vDelay]



System: FighterLaser
	Name: #SS_FLASER_NAME
	Description: #SS_FLASER_DESC
	Appearance: FighterLaser
	
	Available: Techs.BeamEnergy_Root.Level > 0
	Level: Techs.BeamEnergy_Root.Level
	
	MassLevel: Techs.Materials_Lightweight.Level As Level
	DamageLevel: Techs.BeamEnergy_Root.Level
	RangeLevel: Techs.BeamEnergy_Focus.Level As Level
	PowerLevel: Techs.BeamEnergy_Efficiency.Level As Level
	WaveLevel: Techs.BeamEnergy_Wavelength.Level As Level
	HPLevel:  Techs.Materials_Weapons.Level As Level
	
	Size: Scale
	Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (80 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Weapon, FighterWeapon, Require:FighterBomber, Laser, EnergyWeapon
	Tied To: BeamEnergy_Root 0
	
	Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[25 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 1.3
	
	vDamage: 65* Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
	vDelay:(0.8 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vPowCost:(30 * Size) / (1 + (0.1 * PowerLevel))
	vRange: (90 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vEffectiveRange: 0.4 +  (0.02 * DamageLevel)
	vMinDmg: 0.5	
	vWasteHeat: (0.1 * Size) / (1 + (0.1 * PowerLevel))
		
	Provides: FighterEnergyWeapon with Damage[vDamage], Delay[vDelay], Duration[0.5], PowCost[vPowCost], Range[vRange],
		effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[10 * Size]
	
	Hints: Alpha[vDamage * 0.5], Power[-1 * vPowCost], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage / 2], Local/HitsperShot[2], Local/Duration[0.5], Local/Delay[vDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinDmg[vMinDmg * vDamage], WasteHeat[vWasteHeat / vDelay]

System: FighterLaserOvercharged
	Name: #SS_FLASEROC_NAME
	Description: #SS_FLASEROC_DESC
	Appearance: FighterOverchargeLaser
	
	Available: Techs.BeamEnergy_Root.Level > 0
	Level: Techs.BeamEnergy_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level As Level
	DamageLevel: Techs.BeamEnergy_Root.Level
	RangeLevel: Techs.BeamEnergy_Focus.Level As Level
	PowerLevel: Techs.BeamEnergy_Efficiency.Level As Level
	WaveLevel: Techs.BeamEnergy_Wavelength.Level As Level
	HPLevel:  Techs.Materials_Weapons.Level As Level
	
	Size: Scale
	Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (80 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Weapon, FighterWeapon, Require:FighterBomber, Laser, EnergyWeapon
	Tied To: BeamEnergy_Root 0
	
	Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[25 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 1.3
	
	vDamage: 100* Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
	vDelay:(4 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vPowCost:(120 * Size) / (1 + (0.1 * PowerLevel))
	vRange: (120 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vEffectiveRange: 0.4 +  (0.02 * DamageLevel)
	vMinDmg: 0.5
	vWasteHeat: (0.8 * Size) / (1 + (0.1 * PowerLevel))
		
	Provides: FighterEnergyWeaponLarge with Damage[vDamage], Delay[vDelay], Duration[1.0], PowCost[vPowCost], Range[vRange],
		effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[25 * Size]
	
	Hints: Alpha[vDamage], Power[-1 * vPowCost], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage / 4], Local/HitsperShot[4], Local/Duration[1.0], Local/Delay[vDelay], Local/EffRange[vEffectiveRange * vRange], Local/MinDmg[vMinDmg * vDamage], WasteHeat[vWasteHeat / vDelay]	
	

System: Superlaser
	Name: #SS_SUPERLASER_NAME
	Description: #SS_SUPERLASER_DESC
	Appearance: Superlaser
	Explosion: subsystem_destroyed
	
	Tags: SuperWeapon, SpecWeapon, Superlaser, Require:ThermalManagement, Tool:Superlaser, Laser, ECM
	Tied To: BeamEnergy_Root 0
	
	Available: Techs.BeamEnergy_Root.Level > 0
	Level: Techs.BeamEnergy_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level As Level
	DamageLevel: Techs.BeamEnergy_Root.Level
	RangeLevel: Techs.BeamEnergy_Focus.Level As Level
	PowerLevel: Techs.BeamEnergy_Efficiency.Level As Level
	WaveLevel: Techs.BeamEnergy_Wavelength.Level As Level
	HPLevel:  Techs.Materials_Weapons.Level As Level
	
	Size: max(Scale, 2400)
	Durability: 150 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (300 * Size) / (1 + (0.1 * MassLevel))
	
	Costs: Metals[500 * Size * pow(SUBS_COST_CRV, Level)], Electronics[500 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[350 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 15
	
	vDamage: 4000* Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
	vDelay:(30 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vPowCost:(300 * Size) / (1 + (0.1 * PowerLevel))
	vRange: (240 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vTotalDelay: vDelay + 10
	vWasteHeat: (5.0 * Size) / (1 + (0.1 * PowerLevel))
	
	Provides: MegaEnergyWeapon with Damage[vDamage], Delay[vDelay], Duration[10], PowCost[vPowCost], Range[vRange], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[40 * Size]
	
	Hints: Alpha[vDamage * 10], Power[-1 * vPowCost], DPS[(vDamage * 10)/ vTotalDelay], Local/Range[vRange], Local/DMGperShot[vDamage * 10], Local/HitsperShot[40], Local/Duration[10], Local/Delay[vDelay], WasteHeat[(vWasteHeat * 10)/ vTotalDelay]

