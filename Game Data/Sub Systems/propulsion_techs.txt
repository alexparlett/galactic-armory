System: Thruster
	Name: #SS_THRUSTER_NAME
	Description: #SS_THRUSTER_DESC
	Appearance: ThrusterRocket
	Explosion: subsystem_destroyed
	
	Tags: Engine
	Tied To: Propulsion_Root 0

	Available: Techs.Propulsion_Root.Level > 0
	Level: Techs.Propulsion_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level
	
	Size: Scale
	HPLevel:  Techs.Materials_Root.Level
	Durability: 50 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (50 * Size) / (1 + (0.1 * MassLevel))
	
	Costs: Metals[200 * progress(Size, 0.05, Level) * pow(SUBS_COST_CRV, Level)], Electronics[15 * progress(Size, 0.05, Level) * pow(SUBS_COST_CRV, Level)], AdvParts[100 * progress(Size, 0.05, Level) * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Fuel[Size * 10]
	Complexity: 0.4
	
	vThrust: Size * 600 * (2 - decay(pow(LEVEL_GAIN_CURVE,Level),35)) * GAME_THRUST_MULT
	vEfficieny: 0.00018 * decay(pow(LEVEL_GAIN_CURVE,Level),35)
	
	Provides: FuelStorage with
		Amount[Size * 10]

	Provides: FuelThrust with
		Amount[vThrust], 
		Efficiency[vEfficieny]
	
	Requires:
		To Run: Control[5 * Size]
	
	Hints: Thrust[vThrust], FuelUse[vEfficieny * vThrust * -1], Fuel[Size * 10]


System: IonThruster
	Name: #SS_IONTHRUSTER_NAME
	Description: #SS_IONTHRUSTER_DESC
	Appearance: ThrusterIon
	Explosion: subsystem_destroyed
	
	Tags: Engine
	Tied To: Propulsion_Root 0

	Available: Techs.Propulsion_Root.Level > 0
	Level: Techs.Propulsion_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level
	
	Size: Scale
	HPLevel:  Techs.Materials_Root.Level
	Durability: 50 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (50 * Size) / (1 + (0.1 * MassLevel))
	
	Costs: Metals[200 * progress(Size, 0.05, Level) * pow(SUBS_COST_CRV, Level)], Electronics[15 * progress(Size, 0.05, Level) * pow(SUBS_COST_CRV, Level)], AdvParts[100 * progress(Size, 0.05, Level) * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Fuel[Size * 10]
	Complexity: 0.5
	
	vThrust: Size * 560 * (2 - decay(pow(LEVEL_GAIN_CURVE,Level),35)) * GAME_THRUST_MULT		//was 700
	vEfficieny: 0.000036 * decay(pow(LEVEL_GAIN_CURVE,Level),35)
	vPowCost: 10 * decay(pow(LEVEL_GAIN_CURVE,Level),35) * Size
	
	Provides: FuelStorage with
		Amount[Size * 10]

	Provides: IonThrust with
		Amount[vThrust],
		Efficiency[vEfficieny], //Scales with size because effective thrust is inversely scaled to psuedo-account for mass
		PowCost[vPowCost]
	
	Requires:
		To Run: Control[5 * Size]
	
	Hints: Thrust[vThrust], Power[vPowCost * -1], FuelUse[vEfficieny * vThrust * -1], Fuel[Size * 10]

System: PolypropellantThruster
	Name: #SS_POLYPROPTHRUST_NAME
	Description: #SS_POLYPROPTHRUST_DESC
	Appearance: PolypropellantThruster
	Explosion: subsystem_destroyed
	
	Tags: Engine
	Tied To: Propulsion_Root 0

	Available: Techs.Propulsion_Root.Level > 0
	Level: Techs.Propulsion_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level
	
	Size: Scale
	HPLevel:  Techs.Materials_Root.Level
	Durability: 25 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (50 * Size) / (1 + (0.1 * MassLevel))
	
	Costs: Metals[300 * progress(Size, 0.05, Level) * pow(SUBS_COST_CRV, Level)], Electronics[15 * progress(Size, 0.05, Level) * pow(SUBS_COST_CRV, Level)], AdvParts[100 * progress(Size, 0.05, Level) * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Fuel[Size * 10]
	Complexity: 0.6
	
	vThrust: Size * 900 * (2 - decay(pow(LEVEL_GAIN_CURVE,Level),35)) * GAME_THRUST_MULT
	vEfficieny: 0.00036 * decay(pow(LEVEL_GAIN_CURVE,Level),35)
	
	Provides: FuelStorage with
		Amount[Size * 10]

	Provides: FuelThrust with
		Amount[vThrust], 
		Efficiency[vEfficieny]
	
	Requires:
		To Run: Control[6 * Size]
	
	Hints: Thrust[vThrust], FuelUse[vEfficieny * vThrust * -1], Fuel[Size * 10]


System: MagnetoPlasmaThruster
	Name: #SS_MAGPLASTHRUST_NAME
	Description: #SS_MAGPLASTHRUST_DESC
	Appearance: MPDThruster
	Explosion: subsystem_destroyed
	
	Tags: Engine
	Tied To: Propulsion_Root 0

	Available: Techs.Propulsion_Root.Level > 0
	Level: Techs.Propulsion_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level
	
	Size: Scale
	HPLevel:  Techs.Materials_Root.Level
	Durability: 50 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (50 * Size) / (1 + (0.1 * MassLevel))
	
	Costs: Metals[150 * progress(Size, 0.05, Level) * pow(SUBS_COST_CRV, Level)], Electronics[20 * progress(Size, 0.05, Level) * pow(SUBS_COST_CRV, Level)], AdvParts[150 * progress(Size, 0.05, Level) * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Fuel[Size * 10]
	Complexity: 0.8
	
	vThrust: Size * 650 * (2 - decay(pow(LEVEL_GAIN_CURVE,Level),35)) * GAME_THRUST_MULT
	vEfficieny: 0.000054 * decay(pow(LEVEL_GAIN_CURVE,Level),35)
	vPowCost: 30 * decay(pow(LEVEL_GAIN_CURVE,Level),35) * Size
	
	Provides: FuelStorage with
		Amount[Size * 10]

	Provides: IonThrust with
		Amount[vThrust],
		Efficiency[vEfficieny], //Scales with size because effective thrust is inversely scaled to psuedo-account for mass
		PowCost[vPowCost]
	
	Requires:
		To Run: Control[8 * Size]
	
	Hints: Thrust[vThrust], Power[vPowCost * -1], FuelUse[vEfficieny * vThrust * -1], Fuel[Size * 10]


System: VASIMRThruster
	Name: #SS_VASIMRTHRUST_NAME
	Description: #SS_VASIMRTHRUST_DESC
	Appearance: VASIMR
	Explosion: subsystem_destroyed
	
	Tags: Engine
	Tied To: Propulsion_Root 0

	Available: Techs.Propulsion_Root.Level > 0
	Level: Techs.Propulsion_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level
	
	Size: Scale
	HPLevel:  Techs.Materials_Root.Level
	Durability: 50 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (50 * Size) / (1 + (0.1 * MassLevel))
	
	Costs: Metals[100 * progress(Size, 0.05, Level) * pow(SUBS_COST_CRV, Level)], Electronics[30 * progress(Size, 0.05, Level) * pow(SUBS_COST_CRV, Level)], AdvParts[150 * progress(Size, 0.05, Level) * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Fuel[Size * 10]
	Complexity: 1
	
	vThrust: Size * 820 * (2 - decay(pow(LEVEL_GAIN_CURVE,Level),35)) * GAME_THRUST_MULT
	vEfficieny: 0.000018 * decay(pow(LEVEL_GAIN_CURVE,Level),35)
	vPowCost: 50 * decay(pow(LEVEL_GAIN_CURVE,Level),35) * Size
	
	Provides: FuelStorage with
		Amount[Size * 10]

	Provides: IonThrust with
		Amount[vThrust],
		Efficiency[vEfficieny], //Scales with size because effective thrust is inversely scaled to psuedo-account for mass
		PowCost[vPowCost]
	
	Requires:
		To Run: Control[2 * Size]
	
	Hints: Thrust[vThrust], Power[vPowCost * -1], FuelUse[vEfficieny * vThrust * -1], Fuel[Size * 10]



System: AntimatterRocket
	Name: #SS_ANTIMATENG_NAME
	Description: #SS_ANTIMATENG_DESC
	Appearance: AntimatterRocket
	Explosion: subsystem_destroyed
	
	Tags: Engine
	Tied To: Propulsion_Root 0

	Available: Techs.Propulsion_Root.Level > 0
	Level: Techs.Propulsion_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level
	
	Size: Scale
	HPLevel:  Techs.Materials_Root.Level
	Durability: 50 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (50 * Size) / (1 + (0.1 * MassLevel))
	
	Costs: Metals[50 * progress(Size, 0.05, Level) * pow(SUBS_COST_CRV, Level)], Electronics[25 * progress(Size, 0.05, Level) * pow(SUBS_COST_CRV, Level)], AdvParts[250 * progress(Size, 0.05, Level) * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 2
	
	vThrust: Size * 940 * (2 - decay(pow(LEVEL_GAIN_CURVE,Level),35)) * GAME_THRUST_MULT
	vPowCost: 40 * decay(pow(LEVEL_GAIN_CURVE,Level),35) * Size

	Provides: Propulsion with
		Amount[vThrust]
		
	Consumes:
		To Run: Power[vPowCost]

	Requires:
		To Run: Control[4 * Size], AntimatterGeneration[Size * 2]
		
	Hints: Thrust[vThrust]
	
System: BussardRamjet
	Name: #SS_RAMJET_NAME
	Description: #SS_RAMJET_DESC
	Appearance: BussardRamjet
	Explosion: subsystem_destroyed
	
	Tags: Engine
	Tied To: Propulsion_Root 0

	Available: Techs.Propulsion_Root.Level > 0
	Level: Techs.Propulsion_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level
	
	Size: max(Scale, 1)							//was Scale *2
	HPLevel:  Techs.Materials_Root.Level
	Durability: 50 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (50 * Size) / (1 + (0.1 * MassLevel))
	
	Costs: Metals[150 * Size * pow(SUBS_COST_CRV, Level)], Electronics[10 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[10 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 1.2
	
	vThrust: Size * 200 * (2 - decay(pow(LEVEL_GAIN_CURVE,Level),35)) * min(((sqrt(1 + Size) / 20) + 1), 3) * GAME_THRUST_MULT
	
	Provides: Propulsion with
		Amount[vThrust]

			//Consumes:
				//To Run: Power[10 * Size]
	
	Hints: Thrust[vThrust]
	
System: RamScoop
	Name: #SS_RAMSCOOP_NAME
	Description: #SS_RAMSCOOP_DESC
	Appearance: BussardRamscoop
	Explosion: subsystem_destroyed
	
	Tags: Support
	Tied To: Propulsion_Root 0

	Available: Techs.Propulsion_Root.Level > 0
	Level: Techs.Propulsion_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level
	
	Size: max(Scale, 1)
	HPLevel:  Techs.Materials_Root.Level
	Durability: 50 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (50 * Size) / (1 + (0.1 * MassLevel))
	
	Costs: Metals[150 * Size * pow(SUBS_COST_CRV, Level)], Electronics[10 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[10 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size], Fuel[Size * 10 * pow(LEVEL_GAIN_CURVE, Level)]
	Complexity: 1
	
	Tick Rate: 2
	
	vFuelRate: Size * 0.01 * pow(LEVEL_GAIN_CURVE, Level)
	vFuelStore: Size * 10 * (4 - decay(pow(LEVEL_GAIN_CURVE, Level), 25) - decay(pow(LEVEL_GAIN_CURVE, Level), 125) - decay(pow(LEVEL_GAIN_CURVE, Level), 625))
	
	Provides: FuelStorage with
		Amount[vFuelStore]
	
	Provides: CollectFuel with
		Rate[vFuelRate]
	
	Hints: FuelUse[vFuelRate], Fuel[vFuelStore]