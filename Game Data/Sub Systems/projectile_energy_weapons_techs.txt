//	Variables Used
//
//////////////////////////
//
//	vDamage - All Types of Damage
//	vDelay - Reload Time
//	vDeviation
//	vPowCost - Power Costs
//	vRange - Weapons Range ONLY! Not used for AoE Effect Range
//	vEffectiveRange - Effective Range
//	vMinDmg - Lowest Damage
//	vWasteHeat - Heat Needed
//	vAoE_Range - Range AoE Weapons Effect
//	vRequiredCharge - Charge needed for Charge to Fire
//	vSpeed - Weapon Speed
// 	vMinHit - Minimum Hit Chance
// 	vAccuracy - Hit Chance
//
//////////////////////////

System: PlanetPC
	Name: #SS_PLANETPC_NAME
	Description: #SS_PLANETPC_DESC
	Appearance: DefenseBuilding

	Available: Techs.ProjEnergy_Root.Level > 0
	Level: Techs.ProjEnergy_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level
	DamageLevel: Techs.ProjEnergy_Root.Level 
	RangeLevel: Techs.ProjEnergy_Fields.Level
	PowerLevel: Techs.ProjEnergy_Efficiency.Level
	WaveLevel: Techs.ProjEnergy_Wavelength.Level
	HPLevel: Techs.Materials_Struct.Level
	
	Size: Scale
	Durability: 800 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * PLANET_STRUCT_MULT
	Mass: (800 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Structure, Weapon
	Tied To: ProjEnergy_Root 0
	
	Costs: Metals[150 * Size * pow(COST_INC_CRV, Level)], Electronics[50 * Size * pow(COST_INC_CRV, Level)], AdvParts[40 * Size * pow(COST_INC_CRV, Level)]
	Complexity: 2.5 * STRUCT_COMPLX_MULT
	
	vDamage: 360 * Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT	//was Size * 120
	vDelay: max(6, 14 * decay(pow(LEVEL_GAIN_CURVE,Level),50)) * GAME_RELOAD_MULT
	vDeviation: 0.1
	vRange: (70 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vWorkers: Size*300000
	vEffectiveRange: 0.4 +  (0.02 * RangeLevel)
	vMinHit: 0.5
	vMinDmg: 0.5

	Provides: ParticleWeapon with
			Damage[vDamage], Delay[vDelay], PowerUse[0], Range[vRange], Speed[vRange * 0.5], Deviation[vDeviation], 
			effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], minHitChance[vMinHit], wasteHeat[0]
	
	Requires:
		To Run:
			Workers[vWorkers]

	Hints: Workers[vWorkers * -1], DPS[vDamage / vDelay], Range[vRange], HP[Durability]
	

System: PlasmaThrower
	Name: #SS_PLASMAGUN_NAME
	Description: #SS_PLASMAGUN_DESC
	Appearance: PlasmaThrowerGreen
	Explosion: subsystem_destroyed

	Available: Techs.ProjEnergy_Root.Level > 0
	Level: Techs.ProjEnergy_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level
	DamageLevel: Techs.ProjEnergy_Root.Level
	RangeLevel: Techs.ProjEnergy_Fields.Level 
	PowerLevel: Techs.ProjEnergy_Efficiency.Level
	WaveLevel: Techs.ProjEnergy_Wavelength.Level
	HPLevel:  Techs.Materials_Weapons.Level
	
	Size: Scale
	Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (80 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Weapon, BeamEnergyWeapon, Require:ThermalManagement
	Tied To: ProjEnergy_Root 0
	
	Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[25 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[35 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 1.5
	
	vDamage: 45 * Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT			//was 40
	vDelay: (1.2 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vDeviation: 0.1
	vRange: (160 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vSpeed: (vRange / 4)  * (1 + (DamageLevel * GA_TECH_INCREASE))
	vEffectiveRange: 0.4 +  (0.02 * RangeLevel)
	vMinHit: 0.5
	vMinDmg: 0.5
	vWasteHeat: Size * 0.3 * min((1 + (sqrt(Size) / 20)), 3) * (1 / GAME_RELOAD_MULT) * GAME_HEAT_MULT
	vPowCost: (40 * Size) / (1 + (0.1 * PowerLevel))

	Provides: PlasmaWeapon with Damage[vDamage], Delay[vDelay], PowerUse[vPowCost],					//PowerUse was 20 * Size
		Range[vRange], Speed[vSpeed], Deviation[vDeviation],
		effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], minHitChance[vMinHit], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[15 * Size]

	Hints: Alpha[vDamage], Power[-1 * vPowCost / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/Delay[vDelay], Local/ProjSpeed[vSpeed], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit], Local/MinDmg[vMinDmg * vDamage], WasteHeat[vWasteHeat / vDelay]

	
System: TwinPlasmaThrower
	Name: #SS_TWINPLASMAGUN_NAME
	Description: #SS_TWINPLASMAGUN_DESC
	Appearance: TwinPlasmaThrower
	Explosion: subsystem_destroyed

	Available: Techs.ProjEnergy_Root.Level > 0
	Level: Techs.ProjEnergy_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level
	DamageLevel: Techs.ProjEnergy_Root.Level
	RangeLevel: Techs.ProjEnergy_Fields.Level 
	PowerLevel: Techs.ProjEnergy_Efficiency.Level
	WaveLevel: Techs.ProjEnergy_Wavelength.Level
	HPLevel:  Techs.Materials_Weapons.Level
	
	Size: Scale
	Durability: 80 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (160 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Weapon, BeamEnergyWeapon, Require:ThermalManagement, ClipWeapon
	Tied To: ProjEnergy_Root 0
	
	Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], Electronics[50 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[70 * Size * pow(SUBS_COST_CRV, Level)], Labr[10 * Size]
	Complexity: 3
		
	vBurst: 2
	vDelay: (1.2 * (1 + decay(Level, 8)) * min((1 + (sqrt(Size) / 20)), 5) * 2 * GAME_RELOAD_MULT) - 0.2
	vDamage: (45 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vShotDelay: 0.2
	vTotalDelay: (vShotDelay * (vBurst - 1)) + vDelay
	vRange: (160 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vSpeed: (vRange / 4)  * (1 + (DamageLevel * GA_TECH_INCREASE))
	vEffectiveRange: 0.4 +  (0.02 * RangeLevel)
	vMinHit: 0.5
	vMinDmg: 0.5
	vWasteHeat: (0.3 * Size) / (1 + (0.1 * PowerLevel))
	vPowCost: (40 * Size) / (1 + (0.1 * PowerLevel))

	Provides: TwinPlasmaWeapon with Damage[vDamage], ShotDelay[vShotDelay], Delay[vDelay], ClipSize[vBurst], PowerUse[vPowCost],
			Range[vRange], Speed[vSpeed], effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], minHitChance[vMinHit], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[22 * Size]

	Hints: 	Alpha[vDamage * vBurst],Power[(-1 * vPowCost * vBurst)/ vTotalDelay],DPS[(vDamage * vBurst) / vTotalDelay], WasteHeat[(vWasteHeat * vBurst) / vTotalDelay],	Local/Range[vRange], Local/DMGperShot[vDamage], Local/Delay[vTotalDelay],Local/ProjSpeed[vSpeed],Local/EffRange[vEffectiveRange * vRange],			Local/MinHit[vMinHit], Local/MinDmg[vMinDmg * vDamage],	Local/ClipDelay[vDelay],			Local/Clip[vBurst]

System: ParticleCannon
	Name: #SS_PARTICANNON_NAME
	Description: #SS_PARTICANNON_DESC
	Appearance: ParticleCannon
	Explosion: subsystem_destroyed

	Available: Techs.ProjEnergy_Root.Level > 0
	Level: Techs.ProjEnergy_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level
	DamageLevel: Techs.ProjEnergy_Root.Level
	RangeLevel: Techs.ProjEnergy_Fields.Level 
	PowerLevel: Techs.ProjEnergy_Efficiency.Level
	WaveLevel: Techs.ProjEnergy_Wavelength.Level
	HPLevel:  Techs.Materials_Weapons.Level
	
	Size: Scale
	Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (120 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Weapon, BeamEnergyWeapon, Require:ThermalManagement
	Tied To: ProjEnergy_Root 0
	
	Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[25 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[45 * Size * pow(SUBS_COST_CRV, Level)], Labr[7 * Size]
	Complexity: 2.25
	
	vDamage: 80 * Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT					//was Size * 72
	vDelay: (3.0 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vDeviation: 0.1
	vRange: (240 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vSpeed: (vRange / 4)  * (1 + (DamageLevel * GA_TECH_INCREASE))
	vEffectiveRange: 0.4 +  (0.02 * RangeLevel)
	vMinHit: 0.5
	vMinDmg: 0.5
	vWasteHeat:  (0.72 * Size) / (1 + (0.1 * PowerLevel))
	vPowCost: (90 * Size) / (1 + (0.1 * PowerLevel))

	Provides: ParticleWeapon with Damage[vDamage], Delay[vDelay], PowerUse[vPowCost],
		Range[vRange], Speed[vSpeed], Deviation[vDeviation],
		effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], minHitChance[vMinHit], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[20 * Size]

	Hints: Alpha[vDamage], Power[-1 * vPowCost / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/Delay[vDelay], Local/ProjSpeed[vSpeed], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit], Local/MinDmg[vMinDmg * vDamage], WasteHeat[vWasteHeat / vDelay]


System: TwinParticleCannon
	Name: #SS_TWINPARTICANNON_NAME
	Description: #SS_TWINPARTICANNON_DESC
	Appearance: TwinParticleCannon
	Explosion: subsystem_destroyed

	Available: Techs.ProjEnergy_Root.Level > 0
	Level: Techs.ProjEnergy_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level
	DamageLevel: Techs.ProjEnergy_Root.Level
	RangeLevel: Techs.ProjEnergy_Fields.Level 
	PowerLevel: Techs.ProjEnergy_Efficiency.Level
	WaveLevel: Techs.ProjEnergy_Wavelength.Level
	HPLevel:  Techs.Materials_Weapons.Level
	
	Size: Scale
	Durability: 80 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (240 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Weapon, BeamEnergyWeapon, Require:ThermalManagement, ClipWeapon
	Tied To: ProjEnergy_Root 0
	
	Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], Electronics[50 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[90 * Size * pow(SUBS_COST_CRV, Level)], Labr[14 * Size]
	Complexity: 4.5
	
	vBurst: 2
	vDelay: (3.0 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vDamage: 80 * Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT		//was Size * 72
	vShotDelay: 0.2
	vTotalDelay: (vShotDelay * (vBurst - 1)) + vDelay
	vRange: (240 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vSpeed: (vRange / 4)  * (1 + (DamageLevel * GA_TECH_INCREASE))
	vEffectiveRange: 0.4 +  (0.02 * RangeLevel)
	vMinHit: 0.5
	vMinDmg: 0.5
	vWasteHeat:  (0.72 * Size) / (1 + (0.1 * PowerLevel))
	vPowCost: (90 * Size) / (1 + (0.1 * PowerLevel))

	Provides: TwinParticleWeapon with Damage[vDamage], ShotDelay[vShotDelay], Delay[vDelay], ClipSize[vBurst], PowerUse[vPowCost],
		Range[vRange], Speed[vSpeed], effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], minHitChance[vMinHit], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[30 * Size]

	Hints: 	Alpha[vDamage * vBurst],Power[(-1 * vPowCost * vBurst) / vTotalDelay],DPS[(vDamage * vBurst) / vTotalDelay],Local/Range[vRange],Local/DMGperShot[vDamage], Local/Delay[vTotalDelay],Local/ClipDelay[vDelay],Local/Clip[vBurst],Local/ProjSpeed[vSpeed], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit],Local/MinDmg[vMinDmg * vDamage],WasteHeat[(vWasteHeat * vBurst) / vTotalDelay]
	

System: PFW
	Name: #SS_PFW_NAME
	Description: #SS_PFW_DESC
	Appearance: PFWeapon
	Explosion: subsystem_destroyed
	
	Available: Techs.ProjEnergy_Root.Level > 0
	Level: Techs.ProjEnergy_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level
	DamageLevel: Techs.ProjEnergy_Root.Level
	RangeLevel: Techs.ProjEnergy_Fields.Level 
	PowerLevel: Techs.ProjEnergy_Efficiency.Level
	WaveLevel: Techs.ProjEnergy_Wavelength.Level
	HPLevel:  Techs.Materials_Weapons.Level
	
	Size: Scale
	Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (80 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Weapon, BeamEnergyWeapon, Require:ThermalManagement
	Tied To: ProjEnergy_Root 0
	
	Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 2
	
	vDamage: 144 * Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT					//was Size * 180
	vDelay: (3.0 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vDeviation: 0.1
	vRange: (160 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vSpeed: (vRange / 4)  * (1 + (DamageLevel * GA_TECH_INCREASE))
	vWasteHeat:  (0.6 * Size) / (1 + (0.1 * PowerLevel))
	vPowCost: (80 * Size) / (1 + (0.1 * PowerLevel))

	Provides: PolarizingFluxWeapon with Damage[vDamage], Delay[vDelay], PowerUse[vPowCost], Duration[1], 
		Range[vRange], Speed[vSpeed], Deviation[vDeviation], wasteHeat[vWasteHeat]
	
	Requires:
		To Run:
			Control[30 * Size]

	Hints: Alpha[vDamage], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Power[-1 * vPowCost / vDelay], Local/ProjSpeed[vSpeed], Local/Delay[vDelay], WasteHeat[vWasteHeat / vDelay]

	
System: TachyonBlaster
	Name: #SS_TACHYONBLASTER_NAME
	Description: #SS_TACHYONBLASTER_DESC
	Appearance: TachyonBlaster
	Explosion: subsystem_destroyed
	
	Available: Techs.ProjEnergy_Root.Level > 0
	Level: Techs.ProjEnergy_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level
	DamageLevel: Techs.ProjEnergy_Root.Level
	RangeLevel: Techs.ProjEnergy_Fields.Level 
	PowerLevel: Techs.ProjEnergy_Efficiency.Level
	WaveLevel: Techs.ProjEnergy_Wavelength.Level
	HPLevel:  Techs.Materials_Weapons.Level
	
	Size: Scale
	Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (80 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Weapon, BeamEnergyWeapon, Require:ThermalManagement
	Tied To: ProjEnergy_Root 0
	
	Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[100 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[75 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 5
	
	vDamage: 50 * Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
	vDelay: (5.0 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vDeviation: 0.2
	vPowCost: (100 * Size) / (1 + (0.1 * PowerLevel))
	vRange: (600 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vEffectiveRange: 1
	vMinDmg: 1
	vWasteHeat:  (2.5 * Size) / (1 + (0.1 * PowerLevel))
	
	Provides: EnergyWeaponInstant with Damage[vDamage], Delay[vDelay], PowCost[vPowCost], Range[vRange], Deviation[vDeviation],
		effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[40 * Size]
	
	Hints: Alpha[vDamage] , Power[-1 * vPowCost], DPS[vDamage / vDelay], Local/Range[vRange], Local/MinRange[vRange * 0.1], Local/DMGperShot[vDamage], Local/Delay[vDelay], WasteHeat[vWasteHeat / vDelay]

	
System: WaveEmitter
	Name: #SS_WAVEGUN_NAME
	Description: #SS_WAVEGUN_DESC
	Appearance: WaveEmitter
	Explosion: subsystem_destroyed

	Available: Techs.ProjEnergy_Root.Level > 0
	Level: Techs.ProjEnergy_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level
	DamageLevel: Techs.ProjEnergy_Root.Level
	RangeLevel: Techs.ProjEnergy_Fields.Level 
	PowerLevel: Techs.ProjEnergy_Efficiency.Level
	WaveLevel: Techs.ProjEnergy_Wavelength.Level
	HPLevel:  Techs.Materials_Weapons.Level
	
	Size: Scale
	Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (120 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Weapon, BeamEnergyWeapon, Require:ThermalManagement
	Tied To: ProjEnergy_Root 0
	
	Costs: Metals[300 * Size * pow(SUBS_COST_CRV, Level)], Electronics[150 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[50 * Size * pow(SUBS_COST_CRV, Level)], Labr[10 * Size]
	Complexity: 3
	
	vDamage: 36 * Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT					//was Size * 72
	vDelay: (2.0 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vDeviation: 0.1
	vRange: (200 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vSpeed: (vRange / 4)  * (1 + (DamageLevel * GA_TECH_INCREASE))
	vEffectiveRange: 0.4 +  (0.02 * RangeLevel)
	vMinHit: 0.5
	vMinDmg: 0.5
	vWasteHeat:  (0.85 * Size) / (1 + (0.1 * PowerLevel))
	vPowCost: (240 * Size) / (1 + (0.1 * PowerLevel))

	Provides: WaveWeapon with Damage[vDamage], Delay[vDelay], PowerUse[vPowCost],
		Range[vRange], Speed[vSpeed], Deviation[vDeviation],
		effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], minHitChance[vMinHit], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[40 * Size]

	Hints: Alpha[vDamage], Power[-1 * vPowCost / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/Delay[vDelay], Local/ProjSpeed[vSpeed], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit], Local/MinDmg[vMinDmg * vDamage], WasteHeat[vWasteHeat / vDelay]
	
	
System: FighterPFW
	Name: #SS_FIGHTERPFW_NAME
	Description: #SS_FIGHTERPFW_DESC
	Appearance: FighterPFW
	
	Available: Techs.ProjEnergy_Root.Level > 0
	Level: Techs.ProjEnergy_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level
	DamageLevel: Techs.ProjEnergy_Root.Level
	RangeLevel: Techs.ProjEnergy_Fields.Level 
	PowerLevel: Techs.ProjEnergy_Efficiency.Level
	WaveLevel: Techs.ProjEnergy_Wavelength.Level
	HPLevel:  Techs.Materials_Weapons.Level
	
	Size: Scale
	Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (80 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Weapon, FighterWeapon, Require:FighterBomber, EnergyWeapon
	Tied To: ProjEnergy_Root 0
	
	Costs: Metals[200 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[25 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 3
	
	vDamage: 320 * Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
	vDelay: (4.0 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vRange: (70 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vSpeed: (vRange / 4)  * (1 + (DamageLevel * GA_TECH_INCREASE))
	vWasteHeat:  (0.2 * Size) / (1 + (0.1 * PowerLevel))
	vPowCost: (40 * Size) / (1 + (0.1 * PowerLevel))

	Provides: PolarizingFluxWeapon with Damage[vDamage], Deviation[0], Delay[vDelay], PowerUse[vPowCost], Duration[1], 
		Range[vRange], Speed[vSpeed], wasteHeat[vWasteHeat]
	
	Requires:
		To Run:
			Control[25 * Size]

	Hints: Alpha[vDamage], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Power[-1 * vPowCost / vDelay], Local/ProjSpeed[vSpeed], Local/Delay[vDelay], WasteHeat[vWasteHeat / vDelay]
	

System: DualPlasmaBlaster
	Name: #SS_PLASMABLASTER_NAME
	Description: #SS_PLASMABLASTER_DESC
	Appearance: DualPlasmaBlaster

	Available: Techs.ProjEnergy_Root.Level > 0
	Level: Techs.ProjEnergy_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level
	DamageLevel: Techs.ProjEnergy_Root.Level
	RangeLevel: Techs.ProjEnergy_Fields.Level 
	PowerLevel: Techs.ProjEnergy_Efficiency.Level
	WaveLevel: Techs.ProjEnergy_Wavelength.Level
	HPLevel:  Techs.Materials_Weapons.Level
	
	Size: Scale
	Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (80 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Weapon, FighterWeapon, Require:FighterHull, EnergyWeapon
	Tied To: ProjEnergy_Root 0
	
	Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[25 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[35 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 1.5
	
	vDamage: 70 * Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
	vDelay: (0.8 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vRange: (80 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vSpeed: (vRange / 4)  * (1 + (DamageLevel * GA_TECH_INCREASE))
	vEffectiveRange: 0.4 +  (0.02 * RangeLevel)
	vMinHit: 0.5
	vMinDmg: 0.5
	vWasteHeat:  (0.125 * Size) / (1 + (0.1 * PowerLevel))
	vPowCost: (45 * Size) / (1 + (0.1 * PowerLevel))

	Provides: MiniPlasmaWeapon with Damage[vDamage], Delay[vDelay], PowerUse[vPowCost], Range[vRange], Speed[vSpeed],
		effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], minHitChance[vMinHit], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[15 * Size]

	Hints: Alpha[vDamage], Power[-1 * vPowCost / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/Delay[vDelay], Local/ProjSpeed[vSpeed], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit], Local/MinDmg[vMinDmg * vDamage], WasteHeat[vWasteHeat / vDelay]

System: FighterParticleCannon
	Name: #SS_FIGHTERPC_NAME
	Description: #SS_FIGHTERPC_DESC
	Appearance: FighterParticleCannon

	Available: Techs.ProjEnergy_Root.Level > 0
	Level: Techs.ProjEnergy_Root.Level
	MassLevel: Techs.Materials_Lightweight.Level
	DamageLevel: Techs.ProjEnergy_Root.Level
	RangeLevel: Techs.ProjEnergy_Fields.Level 
	PowerLevel: Techs.ProjEnergy_Efficiency.Level
	WaveLevel: Techs.ProjEnergy_Wavelength.Level
	HPLevel:  Techs.Materials_Weapons.Level
	
	Size: Scale
	Durability: 100 * Size * (1 + (HPLevel * GA_TECH_INCREASE)) * GAME_SUBSYS_MULT
	Mass: (80 * Size) / (1 + (0.1 * MassLevel))
	
	Tags: Weapon, FighterWeapon, Require:FighterBomber, EnergyWeapon
	Tied To: ProjEnergy_Root 0
	
	Costs: Metals[100 * Size * pow(SUBS_COST_CRV, Level)], Electronics[50 * Size * pow(SUBS_COST_CRV, Level)], AdvParts[35 * Size * pow(SUBS_COST_CRV, Level)], Labr[5 * Size]
	Complexity: 2.0
	
	vDamage: 160 * Size * (1 + (DamageLevel * GA_TECH_INCREASE)) * GAME_DAMAGE_MULT
	vDelay: (2.4 + (sqrt(Size) / 5)) / (1 + (0.05 * PowerLevel))
	vRange: (140 + (5 * sqrt(Size))) *  (1 + (0.1 * RangeLevel))
	vSpeed: (vRange / 4)  * (1 + (DamageLevel * GA_TECH_INCREASE))
	vEffectiveRange: 0.4 +  (0.02 * RangeLevel)
	vMinHit: 0.5
	vMinDmg: 0.5
	vWasteHeat:  (4.2 * Size) / (1 + (0.1 * PowerLevel))
	vPowCost: (135 * Size) / (1 + (0.1 * PowerLevel))

	Provides: MiniParticleWeapon with Damage[vDamage], Delay[vDelay], PowerUse[vPowCost], Range[vRange], Speed[vSpeed],
		effectiveRangeFactor[vEffectiveRange], minDamage[vMinDmg], minHitChance[vMinHit], wasteHeat[vWasteHeat]

	Requires:
		To Run:
			Control[30 * Size]

	Hints: Alpha[vDamage], Power[-1 * vPowCost / vDelay], DPS[vDamage / vDelay], Local/Range[vRange], Local/DMGperShot[vDamage], Local/Delay[vDelay], Local/ProjSpeed[vSpeed], Local/EffRange[vEffectiveRange * vRange], Local/MinHit[vMinHit], Local/MinDmg[vMinDmg * vDamage], WasteHeat[vWasteHeat / vDelay]
	